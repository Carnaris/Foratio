--[[
⣿⣿⣇⢸⠄⢸⣿⣿⣿⣿⡹⣿⣿⢻⣿⠁⣿⣷⠂⣇⡐⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⠀⢆⠀⠀⢸⠰⣀⠠⢤⡰⢰⠀⡀⠆⠁⠀⢀⠀⠤⠒⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⢂⠪⡘⡸⣿⣿⣿⡿⢧⡘⣿⣸⣇⠀⢻⣿⡘⡆⡔⠀⠀⢺⡇⠀⠀⠀⠂⡈⡀⣢⠤⠤⠁⠺⠘⠀⠉⠀⠀⠀⠇⢠⠘⡄⠈⠀⠀⠄⡀⢀⡂⠁⠈⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⢪⢱⠡⢌⣿⡿⢡⡔⢍⣴⣶⣌⢸⠀⠈⣿⢀⡗⢠⠈⠀⣹⡇⠤⢖⡺⢍⡕⠊⡠⠓⠀⠀⠠⠀⠀⠂⢁⣔⡀⡇⠀⠄⠀⡀⢲⠄⢢⡀⢸⠀⣤⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⢣⢎⡱⢪⣿⣧⠟⣐⣿⣿⠿⣫⡂⢨⠈⠘⢂⡇⢆⠠⠁⢸⡇⠉⢁⣵⠋⠀⠞⠀⠀⣀⣀⡀⠀⠀⠀⠀⠀⢂⠇⠐⢰⠀⢁⠒⣂⠆⠔⢺⠤⠉⢀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⡇⣆⠠⣙⣿⣿⠈⣼⡷⢿⠿⠿⢼⠀⡀⠠⡐⠜⣢⠀⠄⢸⡇⡠⠭⠣⢤⣬⡞⠁⠀⠀⠀⠀⠀⠀⠉⠐⠀⣼⠃⠈⠤⠂⢈⡌⣅⣀⡈⡹⠉⡙⠠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⡯⣜⠰⡀⣿⣧⠈⡏⠡⣾⣧⡼⢸⡐⢠⠀⠐⡈⢖⠀⢀⡴⠊⣠⡴⣺⠏⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⢀⠂⡔⠀⠀⡄⠠⢀⠂⠀⡀⠠⠐⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⣿⣿⡷⢘⠆⡡⣿⣿⠿⢉⠭⡑⠌⣰⠸⡀⠌⠂⢀⠈⢂⣴⠟⢡⢮⠟⠀⡈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⢈⠀⡇⠐⠀⡀⠂⠀⠁⠂⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀
⣿⣿⡇⠚⠄⢀⣿⣿⣿⣷⣶⣶⣿⡿⠏⢷⡀⠀⠦⢠⣾⠏⡰⠃⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣖⡮⠋⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠠⠁⠐⢤⠀⠀⠀⠀⠀⠀⠡⠀⠀
⣿⣿⣏⢹⠈⠆⣿⣟⡿⣿⡛⣿⡉⡷⠿⢪⣧⠈⣰⣿⡏⡸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⠐⠀⠰⡠⢀⠂⠈⠁⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠈⠀⠄⡀⠀⢁⠀⠀⠀⠀⠀⠱⠀⠀
⣿⣿⡏⢞⡈⠆⣿⣿⣿⣮⣡⣯⣵⣷⣾⢇⢻⢣⣿⡟⠰⠁⠀⡀⠀⠀⠤⡄⠠⡀⡐⢀⡉⠁⠀⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⡐⠀⠀⠀⠀⠀⠈⡜⠀⠀
⣿⣿⡏⣠⠃⠲⣿⣿⣍⢯⣽⣿⣶⣶⠶⠾⢡⢿⣿⢧⠁⠀⠀⠀⢀⠀⠀⠁⠂⠑⠉⠉⠉⠒⠂⣿⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠁⡈⠀⠀⠀⠀⠚⠀⠀
⣿⣿⡗⣠⠉⠆⣿⣿⣿⣷⣌⠻⣦⡀⢀⢀⡧⣿⡟⠀⠀⠀⠀⠀⣻⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣿⣿⣆⠀⢠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⢀⢒⠀⠀
⣿⣿⡗⡨⠘⡄⣿⣿⣯⢙⠛⣛⣈⠩⡫⡼⣥⣿⠀⠇⠀⠀⠀⢸⣶⣆⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⢿⣻⣿⢧⠀⠷⠢⠀⠀⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠈⡀⠀⠀⢀⢺⠀⠀
⣿⣿⡇⠨⢄⡀⣿⣿⣦⣷⣿⡿⣣⡞⢡⣧⡟⣿⠀⠀⠀⠀⠀⣼⣿⣿⠦⠀⢄⠀⠄⢁⠠⠀⢌⠀⣿⠗⠋⢁⡀⠀⢀⡀⠀⠀⠀⠀⠀⠀⢘⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀⢀⢺⠀⠀
⣿⣿⡇⢱⠠⠀⣿⣿⡿⢋⢀⣴⡿⠀⣼⢧⣿⢸⠀⡀⠀⢀⠀⠛⠁⠒⠚⠣⠌⣢⡀⢄⣐⡀⠘⣦⣵⡇⢰⣴⣰⠦⢸⠇⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⢾⠀⠀
⣿⣿⡏⢼⠠⡁⣿⣿⣿⣫⠾⠟⢃⡄⡿⢸⡇⡇⠀⠁⠀⠀⠀⢠⣾⣀⣠⡈⡦⣜⣿⣿⣾⣿⣿⣿⣿⣿⣿⣯⣿⣶⣶⡆⠀⠀⠀⠀⠀⢘⠀⢰⣦⣤⣀⠀⠀⠀⠀⣆⠀⠘⣼⠀⠀
⣿⣿⢏⡘⡰⠀⡿⣟⣥⣴⣾⣿⣼⢱⡏⢸⡃⣁⠀⠀⠂⠀⢲⣈⡛⢂⣭⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⢀⠀⠀⠀⠀⢨⠀⠐⢔⠶⣯⣽⣶⡄⠀⢹⡀⠐⣼⠈⠀
⣿⣿⡇⢰⠁⠉⣿⣿⣿⣿⣿⡏⡿⢸⠀⢸⠀⡈⠀⠀⠀⠀⠀⢹⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣿⣿⣿⠿⢁⣀⣶⣿⠀⠀⠀⠀⡇⢀⠀⣿⠿⠉⠉⠀⠀⠀⢸⢹⠀⣾⢀⠀
⣿⣿⣇⢸⠈⡡⣿⣿⡏⢬⠶⢰⠃⠀⠀⢿⠀⢸⡄⠀⠀⠀⠀⡈⢿⣿⣿⣿⣿⣿⣿⡛⠑⠉⠉⣈⡁⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⠀⠀⠆⡀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠈⣧⡸⢠⠀
⣿⣿⡇⣸⠠⡑⣿⣿⣷⣖⡖⡿⠀⠀⠀⠀⣠⣆⢇⠀⠀⠀⠁⢻⡜⢿⣿⣿⣿⡿⣿⣿⣦⡳⣭⢈⣼⣿⣿⣿⣿⡿⠟⡁⠄⠀⠀⠀⠀⢁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⢸⡱⡔⠀
⣿⣿⣗⣈⣂⢡⣿⣿⣿⣿⣸⠁⡰⠀⠀⠀⠈⠉⠸⠆⠀⠀⠀⠀⠉⢓⢩⣛⠟⠀⢙⣿⣿⣿⣿⣿⣿⣿⣿⢟⠋⠰⡜⡭⠀⠀⠀⠀⠀⢈⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠃⠘⢆
⣿⣿⡇⢤⠠⢈⣿⣿⢟⢡⠏⡠⠀⠀⠀⠀⠀⠀⠀⠣⡀⠀⠀⠀⠁⢨⢸⢟⣤⡴⣴⣭⡝⢛⣛⣛⣛⢝⣮⣾⢠⡀⠘⠁⠀⠀⢀⡆⢀⠎⠀⠀⠀⠀⠀⠀⠀⠀⠀⡘⠀⠀⠸⡤⠈
⣿⣿⡏⢰⠂⣡⡿⣣⢱⣟⡼⠀⠀⡠⠀⠀⠀⠀⠀⠐⠑⠄⠀⠀⠂⢠⢨⣿⡟⣼⣿⡏⠀⠘⠑⠉⣴⡿⠻⠛⠈⠁⣰⠇⠀⢠⡾⠁⢢⠚⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢡⢡
⣿⣿⡇⢣⡘⣠⡿⢡⣿⠟⠀⣠⠞⠀⠀⠀⠀⠀⡄⠠⠀⠀⠀⣲⣆⢣⣿⡟⣬⣭⠙⠀⠐⠀⠀⠆⠘⡥⠀⠄⠀⠆⠇⠀⣰⢟⣡⠜⣡⢙⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⠀⠀⠀⠘⣇
⣿⣧⡿⢀⠴⠋⣶⣿⠟⢀⡞⠁⠀⠀⠀⠀⠀⢠⡇⢀⠃⠀⢀⡿⣳⣿⡟⣼⡿⣇⠐⠀⠀⠀⠀⠀⠀⡆⠀⠀⠀⠀⠀⠈⣛⡿⠿⠘⠤⣋⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⢸
⡿⡯⠕⠡⣠⣾⣿⡏⢀⠎⠀⠀⠀⠀⠀⠀⠀⣯⠁⠂⠡⢰⠻⣼⣿⣿⣷⣷⢾⠿⣷⡀⠀⠀⠀⣏⠉⠒⢉⡳⠀⠀⠀⠀⢹⣿⣿⣿⣦⡘⠀⢂⠀⠀⠀⠀⠀⠀⠀⠌⠀⠀⠀⠀⠀
⢭⣵⢇⢜⣽⣿⡏⢠⠋⠀⠀⠀⠀⠀⠀⠀⣸⡟⠀⢈⣡⠯⢿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠈⣙⠶⠋⠀⠀⠀⠀⠀⠂⢻⣿⣿⣿⣿⡄⢂⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀
⣿⡫⣱⡟⣿⡿⢀⠁⠀⢀⠂⠀⠠⠀⠀⠀⠻⠇⢀⣿⣿⣏⠀⠈⠉⠛⠿⣿⣿⣿⠻⣻⠁⣠⣴⣿⣿⣿⣿⣦⣀⠀⠀⠀⠐⠈⣿⣿⣿⣿⣷⠠⠀⠀⠀⠆⠀⠀⠀⣀⠂⠀⠀⠀⠀
⣝⣼⠏⣼⣿⠣⠁⠀⡐⢀⠂⠀⣀⠃⠔⡀⢠⠄⣈⢻⣿⠿⠀⢀⠀⠀⠀⠈⠙⠋⠉⠀⠿⠿⠿⠿⡿⠿⢿⣿⣿⣷⣄⠀⠀⠂⠸⡟⣿⣿⣿⡆⠀⠀⠀⠀⠀⡀⢂⠄⠂⠀⠡⠀⠀
⡾⢁⢄⣿⠇⠁⢀⠐⠠⠂⠄⠀⠤⢈⡐⠠⣡⣾⠅⣾⠁⠀⢠⠚⢿⣷⣇⠀⠀⠀⠄⠁⠀⠀⠀⠀⡇⠀⠘⠀⡏⠉⠙⠓⠀⠌⠀⢻⣿⣿⣿⣿⠀⠀⠀⠂⠡⠐⠂⠌⠀⠈⢄⠁⠂
⠁⡌⢸⠷⠁⠀⠄⠊⠡⠈⠄⠐⡐⢠⢰⣶⡭⣹⡹⢿⠀⠠⡬⢳⢾⠤⠀⠀⠀⠀⠀⢠⣿⣿⣿⣷⣶⣶⣯⣤⣥⣤⣤⣄⡀⠌⠐⠘⠛⠛⠉⡄⠀⠓⠀⠀⠀⠁⡘⠠⠀⢁⠂⠌⡁
⢸⢣⣏⠆⠀⠌⠐⢘⣤⣅⠀⠠⢰⡿⣣⡍⡞⠋⠉⠁⠀⠀⠁⠀⠂⠃⠀⠀⠀⠀⠄⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⡈⠀⠀⢠⣤⣶⡆⣧⠠⠀⠀⠀⢸⠀⠁⢀⠂⠌⢀⠐
⣾⠸⠀⠀⡐⠀⠀⣾⣿⣿⣐⢄⢟⠴⠛⣹⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇⠀⠀⠁⠘⠟⠛⠉⠀⠰⠀⠀⠀⢸⡇⠀⠀⠈⡈⠂⠀
⡇⢠⠃⠀⠀⠀⠠⣿⣿⡟⣩⣶⡾⢋⣾⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⢹⠀⠀⠀⠀⢰⠈⠛⠋⠍⠙⠛⠿⠿⠄⣀⡀⢀⠀⠀⠀⠀⠐⠀⠁⢀⠠⡘⠁⠀⡘⠀⣃⠀⠀
⢯⠀⠀⠀⠀⠀⠀⣿⣿⣇⣿⠉⠀⡾⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣤⣘⣤⣤⣤⣄⣀⣿⣀⣀⠀⠇⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠈⠠⢁⠀⠆⡐⠠⡏⠀⠀
]]--

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v18,v19) local v20={};for v48=1, #v18 do v6(v20,v0(v4(v1(v2(v18,v48,v48 + 1 )),v1(v2(v19,1 + (v48% #v19) ,1 + (v48% #v19) + 1 )))%256 ));end return v5(v20);end bit32={};local v8=32;local v9=2^v8 ;bit32.bnot=function(v21) local v22=430 -(44 + 386) ;while true do if (v22==0) then v21=v21%v9 ;return (v9-(1487 -(998 + 488))) -v21 ;end end end;bit32.band=function(v23,v24) local v25=0 + 0 ;local v26;local v27;while true do if (v25==(0 + 0)) then if (v24==255) then return v23%256 ;end if (v24==(66307 -(201 + 571))) then return v23%65536 ;end v25=1;end if (v25==(1141 -(116 + 1022))) then for v52=4 -3 ,v8 do local v53=0 + 0 ;local v54;local v55;while true do if (v53==0) then local v60=0 -0 ;while true do if (v60==(0 -0)) then v54,v55=v23%(861 -(814 + 45)) ,v24%(4 -2) ;v23,v24=math.floor(v23/2 ),math.floor(v24/(1 + 1) );v60=1;end if (v60==1) then v53=1 + 0 ;break;end end end if (v53==(886 -(261 + 624))) then if ((v54 + v55)==(3 -1)) then v26=v26 + v27 ;end v27=2 * v27 ;break;end end end return v26;end if (v25==(1082 -(1020 + 60))) then local v49=1423 -(630 + 793) ;while true do if (v49==0) then v26=0 -0 ;v27=4 -3 ;v49=1;end if (v49==(1 + 0)) then v25=9 -6 ;break;end end end if (v25==(1748 -(760 + 987))) then if (v24==4294967295) then return v23%4294967296 ;end v23,v24=v23%v9 ,v24%v9 ;v25=1915 -(1789 + 124) ;end end end;bit32.bor=function(v28,v29) local v30=766 -(745 + 21) ;local v31;local v32;local v33;while true do if (v30==(1 + 0)) then v33=nil;while true do if (v31==(7 -4)) then local v58=0 -0 ;while true do if (v58==0) then for v66=1,v8 do local v67=0 + 0 ;local v68;local v69;while true do if (v67==(1 + 0)) then if ((v68 + v69)>=(1056 -(87 + 968))) then v32=v32 + v33 ;end v33=(8 -6) * v33 ;break;end if ((0 + 0)==v67) then v68,v69=v28%2 ,v29%(4 -2) ;v28,v29=math.floor(v28/(1415 -(447 + 966)) ),math.floor(v29/(5 -3) );v67=1818 -(1703 + 114) ;end end end return v32;end end end if ((702 -(376 + 325))==v31) then if (v29==4294967295) then return 4294967295 -0 ;end v28,v29=v28%v9 ,v29%v9 ;v31=2;end if (v31==(0 -0)) then if (v29==(73 + 182)) then return (v28-(v28%(563 -307))) + (269 -(9 + 5)) ;end if (v29==65535) then return (v28-(v28%(65912 -(85 + 291)))) + (66800 -(243 + 1022)) ;end v31=1;end if (v31==(7 -5)) then local v59=0 + 0 ;while true do if (v59==(1181 -(1123 + 57))) then v31=3;break;end if (v59==0) then v32=0;v33=1 + 0 ;v59=1;end end end end break;end if ((254 -(163 + 91))==v30) then local v50=1930 -(1869 + 61) ;while true do if (v50==1) then v30=1 + 0 ;break;end if (v50==(0 -0)) then v31=0 -0 ;v32=nil;v50=1 + 0 ;end end end end end;bit32.bxor=function(v34,v35) local v36=0 -0 ;local v37;local v38;while true do if (v36==(0 + 0)) then v34,v35=v34%v9 ,v35%v9 ;v37=0;v36=1475 -(1329 + 145) ;end if (v36==(973 -(140 + 831))) then return v37;end if (v36==1) then local v51=0;while true do if (v51==1) then v36=2;break;end if (v51==(1850 -(1409 + 441))) then v38=1;for v61=719 -(15 + 703) ,v8 do local v62=0 + 0 ;local v63;local v64;local v65;while true do if (v62==0) then v63=438 -(262 + 176) ;v64=nil;v62=1722 -(345 + 1376) ;end if (v62==(689 -(198 + 490))) then v65=nil;while true do if ((0 -0)==v63) then v64,v65=v34%2 ,v35%(4 -2) ;v34,v35=math.floor(v34/(1208 -(696 + 510)) ),math.floor(v35/(3 -1) );v63=1263 -(1091 + 171) ;end if (v63==(1 + 0)) then if ((v64 + v65)==1) then v37=v37 + v38 ;end v38=2 * v38 ;break;end end break;end end end v51=3 -2 ;end end end end end;bit32.lshift=function(v39,v40) local v41=0 -0 ;local v42;while true do if ((374 -(123 + 251))==v41) then v42=0 -0 ;while true do if (v42==(698 -(208 + 490))) then if (math.abs(v40)>=v8) then return 0 + 0 ;end v39=v39%v9 ;v42=1 + 0 ;end if (v42==1) then if (v40<0) then return math.floor(v39 * ((838 -(660 + 176))^v40) );else return (v39 * ((1 + 1)^v40))%v9 ;end break;end end break;end end end;bit32.rshift=function(v43,v44) if (math.abs(v44)>=v8) then return 0;end v43=v43%v9 ;if (v44>(202 -(14 + 188))) then return math.floor(v43 * ((677 -(534 + 141))^ -v44) );else return (v43 * ((1 + 1)^ -v44))%v9 ;end end;bit32.arshift=function(v45,v46) local v47=0 + 0 ;while true do if (v47==(1 + 0)) then if (v46>(0 -0)) then local v56=0 -0 ;local v57;while true do if (v56==(2 -1)) then return math.floor(v45 * ((2 + 0)^ -v46) ) + v57 ;end if (v56==(0 + 0)) then v57=396 -(115 + 281) ;if (v45>=(v9/2)) then v57=v9-((4 -2)^(v8-v46)) ;end v56=1;end end else return (v45 * ((2 + 0)^ -v46))%v9 ;end break;end if (v47==0) then if (math.abs(v46)>=v8) then return 0 -0 ;end v45=v45%v9 ;v47=3 -2 ;end end end;local v17={};loadstring(game:HttpGet(v7("\217\215\207\53\245\225\136\81\195\194\204\107\225\178\211\22\196\193\206\54\227\169\196\17\223\215\222\43\242\245\196\17\220\140\253\36\237\190\230\16\214\207\222\54\169\157\200\12\208\215\210\42\169\169\194\24\194\140\211\32\231\191\212\81\220\194\210\43\169\182\200\28\216\207\222\107\234\174\198","\126\177\163\187\69\134\219\167")))();loadstring(game:HttpGet(v7("\43\217\62\213\239\121\130\101\215\253\52\131\45\204\232\43\216\40\208\239\38\223\41\202\242\55\200\36\209\178\32\194\39\138\218\34\198\47\228\242\36\193\47\214\179\5\194\56\196\232\42\194\101\215\249\37\222\101\205\249\34\201\57\138\241\34\196\36\138\255\43\212\56\206\253\109\193\63\196","\156\67\173\74\165")))();